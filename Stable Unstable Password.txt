int count[][] = new int[10][5];
		int num[] = new int[]{input1,input2,input3,input4,input5};
		int numCpy[] = new int[]{input1,input2,input3,input4,input5};
		int d;
		int i=0;
		boolean stable = false;
		int occurence[] = new int[5];
		int password=0;
		ArrayList<Integer> stableIndex = new ArrayList<Integer>();
		ArrayList<Integer> unstableIndex = new ArrayList<Integer>();
	
		while(i<5 && num[i]>0){
			d = num[i]%10;
			count[d][i]++;
			num[i]/=10;
			if(num[i]==0){
				i++; //move to next number
			}
		}

		for(i=0; i<5; i++){
			for(int j=0; j<10; j++){
				if(count[j][i]>0){
					occurence[i] = count[j][i];
				}
			}
		}

		for(i=0; i<5; i++){
			for(int j=0; j<10; j++){
				if(count[j][i]>0 && count[j][i] == occurence[i]){
					stable = true;
				}
				else if (count[j][i]>0 && count[j][i]!= occurence[i]){
					stable = false;
					unstableIndex.add(i);
					break;
				}
			}
			if(stable){
				stableIndex.add(i);
			}
			stable = false;
		}

		for(i=0; i<stableIndex.size();i++){
			password+= numCpy[stableIndex.get(i)];
		}
		
		for(i=0; i<unstableIndex.size();i++){
			password-= numCpy[unstableIndex.get(i)];
		}
		
		return password;